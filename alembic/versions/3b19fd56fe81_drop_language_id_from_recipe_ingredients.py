"""drop language_id from recipe_ingredients

Revision ID: 3b19fd56fe81
Revises: 558fb6252a95
Create Date: 2025-10-21 12:43:36.937602

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b19fd56fe81'
down_revision: Union[str, Sequence[str], None] = '558fb6252a95'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    #op.drop_table('recipes', schema='recipes')
    # op.drop_table('unit_translations', schema='translations')
    # op.drop_table('units', schema='recipes')
    # op.drop_table('categories', schema='recipes')
    # op.drop_table('user_recipes', schema='recipes')
    # op.drop_table('languages', schema='translations')
    # op.drop_table('ingredients', schema='recipes')
    # op.drop_table('user_recipe_ingredients', schema='recipes')
    # op.drop_table('groups', schema='users')
    # op.drop_table('recipe_ingredients', schema='recipes')
    # op.drop_table('ingredient_categories', schema='recipes')
    # op.drop_table('recipe_translations', schema='translations')
    # op.drop_table('user_groups', schema='users')
    # op.drop_table('ingredient_translations', schema='translations')
    # op.drop_table('users', schema='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('users.users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('oauth_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('provider_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('oauth_id', 'provider_name', name='uq_user_oauth', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='users_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='users',
    postgresql_ignore_search_path=False
    )
    op.create_table('ingredient_translations',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('ingredient_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['recipes.ingredients.id'], name=op.f('ingredient_translations_ingredient_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['translations.languages.id'], name=op.f('ingredient_translations_language_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('ingredient_translations_pkey')),
    sa.UniqueConstraint('ingredient_id', 'language_id', name=op.f('uq_ingredient_translation'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='translations'
    )
    op.create_table('user_groups',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['users.groups.id'], name=op.f('user_groups_group_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.users.id'], name=op.f('user_groups_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'group_id', name=op.f('user_groups_pkey')),
    schema='users'
    )
    op.create_table('recipe_translations',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('recipe_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('instructions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['translations.languages.id'], name=op.f('recipe_translations_language_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.recipes.id'], name=op.f('recipe_translations_recipe_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('recipe_translations_pkey')),
    sa.UniqueConstraint('recipe_id', 'language_id', name=op.f('uq_recipe_translation'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='translations'
    )
    op.create_table('ingredient_categories',
    sa.Column('ingredient_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['recipes.categories.id'], name=op.f('ingredient_categories_category_id_fkey')),
    sa.ForeignKeyConstraint(['ingredient_id'], ['recipes.ingredients.id'], name=op.f('ingredient_categories_ingredient_id_fkey')),
    sa.PrimaryKeyConstraint('ingredient_id', 'category_id', name=op.f('ingredient_categories_pkey')),
    schema='recipes'
    )
    op.create_table('recipe_ingredients',
    sa.Column('recipe_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('ingredient_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unit_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('language_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['recipes.ingredients.id'], name=op.f('recipe_ingredients_ingredient_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['translations.languages.id'], name=op.f('recipe_ingredients_language_id_fkey')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.recipes.id'], name=op.f('recipe_ingredients_recipe_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['recipes.units.id'], name=op.f('recipe_ingredients_unit_id_fkey')),
    sa.PrimaryKeyConstraint('recipe_id', 'ingredient_id', name=op.f('recipe_ingredients_pkey')),
    schema='recipes'
    )
    op.create_table('groups',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('group_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('groups_pkey')),
    sa.UniqueConstraint('group_name', name=op.f('groups_group_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='users'
    )
    op.create_table('user_recipe_ingredients',
    sa.Column('user_recipe_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('ingredient_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unit_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('language_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['recipes.ingredients.id'], name=op.f('user_recipe_ingredients_ingredient_id_fkey')),
    sa.ForeignKeyConstraint(['language_id'], ['translations.languages.id'], name=op.f('user_recipe_ingredients_language_id_fkey')),
    sa.ForeignKeyConstraint(['unit_id'], ['recipes.units.id'], name=op.f('user_recipe_ingredients_unit_id_fkey')),
    sa.ForeignKeyConstraint(['user_recipe_id'], ['recipes.user_recipes.id'], name=op.f('user_recipe_ingredients_user_recipe_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_recipe_id', 'ingredient_id', name=op.f('user_recipe_ingredients_pkey')),
    schema='recipes'
    )
    op.create_table('ingredients',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('ingredients_pkey')),
    schema='recipes'
    )
    op.create_table('languages',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('translations.languages_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('language_code', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('language_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='languages_pkey'),
    sa.UniqueConstraint('language_code', name='languages_language_code_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('language_name', name='languages_language_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='translations',
    postgresql_ignore_search_path=False
    )
    op.create_table('user_recipes',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('base_recipe_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('cooking_time_in_minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('instructions', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['base_recipe_id'], ['recipes.recipes.id'], name=op.f('user_recipes_base_recipe_id_fkey')),
    sa.ForeignKeyConstraint(['language_id'], ['translations.languages.id'], name=op.f('user_recipes_language_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.users.id'], name=op.f('user_recipes_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_recipes_pkey')),
    schema='recipes'
    )
    op.create_table('categories',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('categories_pkey')),
    sa.UniqueConstraint('name', name=op.f('categories_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='recipes'
    )
    op.create_table('units',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('recipes.units_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='units_pkey'),
    sa.UniqueConstraint('symbol', name='units_symbol_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='recipes',
    postgresql_ignore_search_path=False
    )
    op.create_table('unit_translations',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('unit_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['translations.languages.id'], name=op.f('unit_translations_language_id_fkey')),
    sa.ForeignKeyConstraint(['unit_id'], ['recipes.units.id'], name=op.f('unit_translations_unit_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('unit_translations_pkey')),
    sa.UniqueConstraint('unit_id', 'language_id', name=op.f('uq_unit_translation'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    schema='translations'
    )
    op.create_table('recipes',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('cooking_time_in_minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.users.id'], name=op.f('recipes_author_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('recipes_pkey')),
    schema='recipes'
    )
    # ### end Alembic commands ###
