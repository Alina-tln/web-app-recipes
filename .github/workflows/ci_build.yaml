name: CI Lint and Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.13-slim

    env:
      MODE: TEST
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: test_user
      DB_PASSWORD: password
      DB_NAME: test_db

    services:
      postgres:
        image: postgres:17.6-alpine3.22
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics


      - name: Install Postgres client
        run: apt-get update && apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..15}; do
            if pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; then
              echo "Postgres is ready!"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 3
          done

      - name: Create test schemas
        run: |
          for schema in users recipes translations; do
            PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c "CREATE SCHEMA IF NOT EXISTS $schema;"
          done

      - name: Set up .env from secret
        run: echo "${{ secrets.ENV_FILE }}" > .env
        shell: bash

      - name: Run tests with Pytest
        run: pytest --cov