import pytest
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession
from user_service.models.users import User

@pytest.mark.asyncio # üëà –®–∞–≥ 2: –î–µ–ª–∞–µ–º —Ç–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º
async def test_user_is_persisted_in_db(
        async_session: AsyncSession, # üëà –®–∞–≥ 2: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
        test_user_fixture: User       # üëà –®–∞–≥ 2: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ–±—ä–µ–∫—Ç User, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∏–∫—Å—Ç—É—Ä–æ–π, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω.
    """

    # User —É–∂–µ —Å–æ–∑–¥–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–µ—Å—Å–∏–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è test_user_fixture.
    user_id_to_check = test_user_fixture.id

    # 1. –°–±—Ä–æ—Å–∏–º —Å–µ—Å—Å–∏—é, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ –ë–î, –∞ –Ω–µ –∏–∑ –∫—ç—à–∞ —Å–µ—Å—Å–∏–∏.
    await async_session.expunge_all()

    # 2. –í—ã–ø–æ–ª–Ω—è–µ–º SELECT –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
    stmt = select(User).where(User.id == user_id_to_check)
    result = await async_session.execute(stmt)

    user_from_db = result.scalar_one_or_none()

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞
    assert user_from_db is not None, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î."
    assert user_from_db.email == "test_user_for_check@example.com"
